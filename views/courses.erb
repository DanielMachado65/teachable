<!doctype html>
<html>
<head>
  <meta charset="utf-8" />
  <title>Relatório de cursos publicados</title>
  <style>
    :root { color-scheme: light; }
    body { font-family: system-ui, sans-serif; margin: 24px; max-width: 960px; }
    .card { border: 1px solid #ddd; border-radius: 12px; padding: 16px; margin-bottom: 16px; box-shadow: 0 8px 20px -12px rgba(0,0,0,.3); }
    .heading { color: #555; margin: 4px 0 12px; }
    .pill { display: inline-block; border: 1px solid #ccc; border-radius: 999px;
            padding: 4px 10px; margin: 4px 6px 0 0; font-size: 14px; background: rgba(0,0,0,0.03); }
    .spinner { width: 32px; height: 32px; border-radius: 50%; border: 4px solid #ccc; border-top-color: #555; animation: spin 0.8s linear infinite; margin-right: 12px; }
    .loading-wrapper { display: flex; align-items: center; gap: 12px; margin: 24px 0; color: #555; }
    .loading-wrapper.error { color: #b00020; }
    .empty { color: #777; font-style: italic; }
    @keyframes spin { to { transform: rotate(360deg); } }
  </style>
</head>
<body>
  <h1>Cursos publicados</h1>
  <div id="loading" class="loading-wrapper">
    <div class="spinner" aria-hidden="true"></div>
    <span id="loading-text">Carregando cursos publicados…</span>
  </div>
  <div id="courses"></div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const coursesContainer = document.getElementById("courses");
      const loadingWrapper = document.getElementById("loading");
      const loadingText = document.getElementById("loading-text");

      fetch("/api/reports/published_courses")
        .then((response) => {
          if (!response.ok) throw new Error("Resposta inválida da API");
          return response.json();
        })
        .then((payload) => {
          const courses = Array.isArray(payload?.data) ? payload.data : [];
          if (!courses.length) {
            loadingWrapper.classList.remove("loading-wrapper");
            loadingWrapper.innerHTML = "<p class=\"empty\">Nenhum curso publicado encontrado.</p>";
            return;
          }
          loadingWrapper.remove();
          renderCoursesIncrementally(courses);
        })
        .catch((error) => {
          console.error("Erro ao carregar cursos", error);
          loadingWrapper.classList.add("error");
          loadingText.textContent = "Não foi possível carregar os cursos.";
        });

      function renderCoursesIncrementally(courses) {
        let index = 0;
        const chunkSize = 6;

        const renderChunk = () => {
          const fragment = document.createDocumentFragment();
          for (let i = 0; i < chunkSize && index < courses.length; i += 1, index += 1) {
            fragment.appendChild(buildCourseCard(courses[index]));
          }
          coursesContainer.appendChild(fragment);
          if (index < courses.length) {
            requestAnimationFrame(renderChunk);
          }
        };

        renderChunk();
      }

      function buildCourseCard(course) {
        const card = document.createElement("div");
        card.className = "card";

        const title = document.createElement("h2");
        title.textContent = course?.name || "Curso sem nome";
        card.appendChild(title);

        if (course?.heading) {
          const heading = document.createElement("p");
          heading.className = "heading";
          heading.textContent = course.heading;
          card.appendChild(heading);
        }

        const studentsLabel = document.createElement("p");
        const strong = document.createElement("strong");
        strong.textContent = "Estudantes ativos:";
        studentsLabel.appendChild(strong);
        card.appendChild(studentsLabel);

        const students = Array.isArray(course?.students) ? course.students : [];
        if (!students.length) {
          const empty = document.createElement("p");
          empty.className = "empty";
          empty.textContent = "Nenhum aluno ativo.";
          card.appendChild(empty);
        } else {
          const pillsWrapper = document.createElement("div");
          students.forEach((student) => {
            const pill = document.createElement("span");
            pill.className = "pill";
            const labelParts = [];
            if (student?.name) labelParts.push(student.name);
            if (student?.email) labelParts.push(student.email);
            pill.textContent = labelParts.join(" — ") || "Aluno sem dados";
            pillsWrapper.appendChild(pill);
          });
          card.appendChild(pillsWrapper);
        }

        return card;
      }
    });
  </script>
</body>
</html>
